FROM debian:12 AS gcc-build

LABEL vendor="ProtoBridge Library" \
    type="gcc-build" \
    version="15.1.0" \
    description="Stage to build GCC from source."

ENV DEBIAN_FRONTEND=noninteractive

# Install dependencies for building GCC
RUN apt-get update && apt-get install -y \
    build-essential \
    libgmp-dev \
    libmpfr-dev \
    libmpc-dev \
    libisl-dev \
    zlib1g-dev \
    wget \
    flex \
    git \
    bison \
    texinfo \
    vim && \
    apt-get clean

RUN git clone https://gcc.gnu.org/git/gcc.git gcc-16-trunk

# Configure and build GCC for native platform (x86-x64)
RUN cd gcc-16-trunk && \
    mkdir build && cd build && \
    ../configure -v \
    --build=x86_64-linux-gnu \
    --host=x86_64-linux-gnu \
    --target=x86_64-linux-gnu \
    --disable-multilib \
    --prefix=/usr/local/gcc-16-trunk \
    --enable-checking=release \
    --enable-default-ssp \
    --disable-fixincludes \
    --enable-languages=c,c++ && \
    make -j$(nproc) && \
    make check && \
    make install

# Second stage: Base image with GCC installed from build stage
FROM debian:12 AS pbl-base

LABEL vendor="ProtoBridge Library" \
    type="base" \
    version="1.0.0" \
    release-date="2025-05-25" \
    base-image="debian:12"

ENV DEBIAN_FRONTEND=noninteractive

# Install essential runtime dependencies
RUN apt-get update && apt-get install -y vim && apt-get clean

# Copy GCC binaries and libraries from the build stage
COPY --from=gcc-build /usr/local/gcc-16-trunk /usr/local/gcc-16-trunk

# Configure environment variables for GCC
ENV LD_LIBRARY_PATH=/usr/local/gcc-16-trunk/lib64:$LD_LIBRARY_PATH \
    PATH=/usr/local/gcc-16-trunk/bin:$PATH

# Add the new GCC library path to the dynamic linker configuration and update cache
RUN echo "/usr/local/gcc-16-trunk/lib64" > /etc/ld.so.conf.d/gcc.conf && ldconfig

# Set GCC 15.2.0 as the default compiler
RUN update-alternatives --install /usr/bin/gcc gcc /usr/local/gcc-16-trunk/bin/gcc 60 \
    --slave /usr/bin/g++ g++ /usr/local/gcc-16-trunk/bin/g++

# Verify the installation of GCC and G++
# RUN gcc --version | grep 'gcc (GCC) 15.2.0' || (echo 'GCC version mismatch' && false)
# RUN g++ --version | grep 'g++ (GCC) 15.2.0' || (echo 'G++ version mismatch' && false)